17:37:44 scenario.file.loc[Ljava.lang.String;@5db250b4
17:37:44 loading BDD file: scenarios/Venkat_FlipkartOrderFlow.bdd
17:37:44 total test found: 2
17:37:44 

Executing scenario: Venkata_FlipkartOrderFllow - end to end
17:37:44 pkg: com.qmetry.qaf.automation.step
17:37:45 pkg: com.web_flipkart
17:37:45 Found duplicate step to load [] with [lower] prority then []
17:37:45 Invoking Teststep: Given user is on flipkart homepage
17:37:59 Completed Teststep: Given user is on flipkart homepage
17:37:59 Invoking Teststep: When user selects product 'Booties' from 'Baby & Kids' category with arguments: [Booties, Baby & Kids]
17:38:00 Completed Teststep: When user selects product 'Booties' from 'Baby & Kids' category with arguments: [Booties, Baby & Kids]
17:38:00 Invoking Teststep: Then user should see product results
17:38:05 Completed Teststep: Then user should see product results
17:38:05 Invoking Teststep: When user sets '200' and '400' price with arguments: [200, 400]
17:38:05 Completed Teststep: When user sets '200' and '400' price with arguments: [200, 400]
17:38:05 Invoking Teststep: And user selets price 'Price -- High to Low' with arguments: [Price -- High to Low]
17:38:10 Completed Teststep: And user selets price 'Price -- High to Low' with arguments: [Price -- High to Low]
17:38:10 Invoking Teststep: Then user should see only product less than max value
17:38:10 Completed Teststep: Then user should see only product less than max value
17:38:10 Invoking Teststep: When user select '0' product from product results with arguments: [0]
17:38:10 Failure Teststep: When user select '0' product from product results with arguments: [0]
org.openqa.selenium.WebDriverException: unknown error: Element <a class="_2cLu-l" title="..." target="_blank" rel="noopener noreferrer" href="/eio-booties/p/itmefunjtwhgrczs?pid=BOOEFUNJUDZUWHN9&amp;srno=b_1_1&amp;otracker=nmenu_sub_Baby%20and%20Kids_0_Booties&amp;lid=LSTBOOEFUNJUDZUWHN9R6NCOE&amp;fm=organic&amp;iid=6044cd77-a9b3-419b-8b93-328b11e77743.BOOEFUNJUDZUWHN9.SEARCH&amp;ppt=Store Browse&amp;ppn=Search Page&amp;ssid=mi5qanr1rk0000001516104480544">EIO Booties</a> is not clickable at point (394, 516). Other element would receive the click: <div class="_2MN7dN"></div>
  (Session info: chrome=63.0.3239.132)
  (Driver info: chromedriver=2.34.522940 (1a76f96f66e3ca7b8e57d503b4dd3bccfba87af1),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 38 milliseconds
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'ICPL12225', ip: '10.11.31.179', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.34.522940 (1a76f96f66e3ca7b8e57d503b4dd3bccfba87af1), userDataDir=C:\Users\VENKAT~1.RED\AppData\Local\Temp\scoped_dir11052_30128}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=63.0.3239.132, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: 55a9335c0ddfd3dbb19984ff25bc9593
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.executeWitoutLog(QAFExtendedWebDriver.java:256)
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebElement.execute(QAFExtendedWebElement.java:252)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.web_flipkart.pages.BootiesresultsTestPage.selectProductName(BootiesresultsTestPage.java:91)
	at com.web_flipkart.StepsBackLog.userSelectProductFromProductResults(StepsBackLog.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:160)
	at com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)
	at com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:134)
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:167)
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:219)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:781)
	at org.testng.TestRunner.run(TestRunner.java:635)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
17:38:10 Completed Teststep: When user select '0' product from product results with arguments: [0]
17:38:10 Competed scenario: Venkata_FlipkartOrderFllow with status FAILURE
17:38:10 

Executing scenario: Venkat_DataDriven - end to end
17:38:10 Test Data{submenu=Booties, minprice=200, maxpice=400, sortby=Price -- High to Low, productnum=2, pincode=560064}
17:38:10 Invoking Teststep: Given user is on flipkart homepage
17:38:13 Completed Teststep: Given user is on flipkart homepage
17:38:13 Invoking Teststep: When user selects product ${submenu} from 'Baby & Kids' category with arguments: [${submenu}, Baby & Kids]
17:38:14 Completed Teststep: When user selects product Booties from 'Baby & Kids' category with arguments: [${submenu}, Baby & Kids]
17:38:14 Invoking Teststep: Then user should see product results
17:38:18 Completed Teststep: Then user should see product results
17:38:18 Invoking Teststep: When user sets ${minprice} and ${maxpice} price with arguments: [${minprice}, ${maxpice}]
17:38:19 Completed Teststep: When user sets 200 and 400 price with arguments: [${minprice}, ${maxpice}]
17:38:19 Invoking Teststep: And user selets price ${sortby} with arguments: [${sortby}]
17:38:21 Completed Teststep: And user selets price Price -- High to Low with arguments: [${sortby}]
17:38:21 Invoking Teststep: Then user should see only product less than max value
17:38:21 Completed Teststep: Then user should see only product less than max value
17:38:21 Invoking Teststep: When user select ${productnum} product from product results with arguments: [${productnum}]
17:38:25 Completed Teststep: When user select 2 product from product results with arguments: [${productnum}]
17:38:25 Invoking Teststep: Then user should see product details matching correctly
17:38:28 Completed Teststep: Then user should see product details matching correctly
17:38:28 Invoking Teststep: When user check for the delivery ${pincode} with arguments: [${pincode}]
17:38:29 Completed Teststep: When user check for the delivery 560064 with arguments: [${pincode}]
17:38:29 Invoking Teststep: And user selects add to cart
17:38:34 Completed Teststep: And user selects add to cart
17:38:34 Invoking Teststep: Then product has been added to the cart
17:38:34 Completed Teststep: Then product has been added to the cart
17:38:34 Competed scenario: Venkat_DataDriven with status SUCESS
